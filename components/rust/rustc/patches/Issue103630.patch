Reverts (partly) https://github.com/rust-lang/rust/commit/5a30316fc14ab6952ce9f925478c498c804a7b71
See: https://github.com/rust-lang/rust/issues/103630

--- rustc-1.64.0-src/src/bootstrap/Cargo.lock.orig	2022-10-27 16:30:09.943617050 +0200
+++ rustc-1.64.0-src/src/bootstrap/Cargo.lock	2022-10-27 16:31:08.992499840 +0200
@@ -47,7 +47,6 @@
 dependencies = [
  "cc",
  "cmake",
- "fd-lock",
  "filetime",
  "getopts",
  "hex",
--- rustc-1.64.0-src/src/bootstrap/Cargo.toml.orig	2022-10-27 16:32:32.393787870 +0200
+++ rustc-1.64.0-src/src/bootstrap/Cargo.toml	2022-10-27 16:33:41.864929440 +0200
@@ -36,7 +36,6 @@
 
 [dependencies]
 cmake = "0.1.38"
-fd-lock = "3.0.6"
 filetime = "0.2"
 num_cpus = "1.0"
 getopts = "0.2.19"
--- rustc-1.64.0-src/src/bootstrap/bin/main.rs.~1~	2022-09-19 16:07:21.000000000 +0200
+++ rustc-1.64.0-src/src/bootstrap/bin/main.rs	2022-10-27 16:51:22.919858790 +0200
@@ -7,27 +7,13 @@
 
 use std::env;
 
-use bootstrap::{t, Build, Config, Subcommand, VERSION};
+use bootstrap::{Build, Config, Subcommand, VERSION};
 
 fn main() {
     let args = env::args().skip(1).collect::<Vec<_>>();
     let config = Config::parse(&args);
 
-    let mut build_lock;
-    let _build_lock_guard;
-    if cfg!(any(unix, windows)) {
-        build_lock = fd_lock::RwLock::new(t!(std::fs::File::create(config.out.join("lock"))));
-        _build_lock_guard = match build_lock.try_write() {
-            Ok(lock) => lock,
-            err => {
-                println!("warning: build directory locked, waiting for lock");
-                drop(err);
-                t!(build_lock.write())
-            }
-        };
-    } else {
-        println!("warning: file locking not supported for target, not locking build directory");
-    }
+    println!("warning: file locking not supported for target, not locking build directory");
 
     // check_version warnings are not printed during setup
     let changelog_suggestion =
